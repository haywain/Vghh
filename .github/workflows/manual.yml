

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ inputs.name }}"
Breadcrumbschatgpt-github-actions

/action.yml

File metadata and controls

Code

Blame

# action.yml

name: 'Code Review with ChatGPT'

description: 'Automating code review using ChatGPT with Github Actions integration on PRs for code explanations.'

inputs:

  openai_api_key:  # id of input

    description: 'OpenAI API Key'

    required: true

    default: ''

  github_token:  # id of input

    description: 'Github API Key'

    required: true

    default: ''

  github_pr_id:  # id of input

    description: 'Github PR ID'

    required: true

    default: ''

  openai_engine:  # id of input

    description: 'GPT-3 models can understand and generate natural language. We offer four main models with different levels of power suitable for different tasks. Davinci is the most capable model, and Ada is the fastest.'

    required: false

    default: 'text-davinci-002'

  openai_temperature:  # id of input

    description: 'What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.'

    required: false

    default: '0.5'

  openai_max_tokens:  # id of input

    description: 'The maximum number of tokens to generate in the completion.'

    required: false

    default: '2048'

  mode:  # id of input

    description: 'How to capture PR changes. Options: files, patch'

    required: false

    default: 'files'

runs:

  using: 'docker'

  image: 'Dockerfile'

  args:

    - ${{ inputs.openai_api_key }}

    - ${{ inputs.github_token }}

    - ${{ inputs.github_pr_id }}

    - ${{ inputs.openai_engine }}

    - ${{ inputs.openai_temperature }}

    - ${{ inputs.openai_max_tokens }}

    - ${{ inputs.mode }}
